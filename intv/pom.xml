<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.anv</groupId>
  <artifactId>intv</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>intv Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  	<properties>
		<java.version>1.8</java.version>
		<junit.version>4.11</junit.version>
		<spring-framework.version>5.1.3.RELEASE	</spring-framework.version>
		<servlet.version>4.0.1</servlet.version>
		<jsp.version>2.3.1</jsp.version>
		<jstl.version>1.2</jstl.version>
		<log4j.version>1.2.17</log4j.version>
		<mysql.version>8.0.14</mysql.version>
		<slf4j-api.version>1.7.7</slf4j-api.version>
		<slf4j-log4j12.version>1.7.7</slf4j-log4j12.version>
		<hibernate.version>5.3.7.Final</hibernate.version>
		<thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
	</properties>

  <dependencies>
	    <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>${junit.version}</version>
	      <scope>test</scope>
	    </dependency>
    	<!-- Servlets config -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<!-- spring config -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<!-- spring jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<!-- Spring ORM. To get compatible Hibernate version, go to POM for this -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- Apache Commons DBCP -->
 		<dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-dbcp2</artifactId>
			    <version>2.5.0</version>
			</dependency>  
		<!-- MySQL Driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<!-- Slf4j declaration -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>
		<!-- Log4j implementation -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-log4j12.version}</version>
		</dependency>
		
		<!-- Below jar is needed for java version above 9 -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		
		<!-- Thymeleaf library -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring5</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>

  </dependencies>
  
  <build>
    <finalName>intv</finalName>
     <plugins>
    	<!-- Tells which version of compiler to be used to compile source files -->
    	<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <version>3.8.0</version>
		    <configuration>
		        <release>11</release>
		    </configuration>
		</plugin>
		
		<!-- Tells how to create war file Collecting all artifact dependencies, 
					classes and resources of the web application and packaging them into a web 
					application archive -->
		<plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-war-plugin</artifactId>
	        <version>3.2.2</version>
	        <configuration>
				<failOnMissingWebXml>false</failOnMissingWebXml>
			</configuration>
      	</plugin>
      	<plugin>
				<!-- Tells how to create jar file. Whether manifest is needed or not 
					provides the capability to build jars -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
		</plugin>
	 </plugins>
  </build>
</project>
